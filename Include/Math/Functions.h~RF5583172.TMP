#pragma once

#include <Math/Matrix4.h>

namespace FLCL {
	namespace Math {

		Float32 DegreesToRadians(Float32 radians) {
			return radians * (180 / pi);
		};

		Float32 RadiansToDegrees(Float32 degrees) {
			return degrees * (pi / 180);
		};

		template<typename T>
		T Min(T a, T b) {
			return ((a) > (b) ? (b) : (a));
		};

		template<typename T>
		T Max(T a, T b) {
			return ((a) < (b) ? (b) : (a));
		};

		template<typename T>
		T Abs(T a, T b) {
			return ((a) < 0 ? -(a) : (a));
		};

		template<typename T>
		T Mod(T a, T m) {
			return (((a) % (m)) >= 0 ? ((a) % (m)) : (((a) % (m)) + (m)));
		};

		template<typename T>
		T Square(T a) {
			return (a * a);
		};

	} // namespace Math
} // namespace FLCL